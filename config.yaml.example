# Weave MCP Server Configuration Example
# Copy this file to config.yaml and update with your values

---
# Collection Schemas Directory
# Directory containing schema YAML files (one schema per file)
# Schemas defined inline in databases.schemas take precedence over directory schemas
schemas_dir: ./schemas

# Database Configuration
databases:
  # Default database type to use
  # Options: weaviate-cloud, weaviate-local, mock
  default: ${VECTOR_DB_TYPE:-weaviate-cloud}
  
  # Available vector databases
  vector_databases:
    
    # Weaviate Cloud (Paid Service)
    # Requires: WEAVIATE_URL, WEAVIATE_API_KEY, OPENAI_API_KEY
    - name: weaviate-cloud
      type: weaviate-cloud
      url: ${WEAVIATE_URL}                    # Your Weaviate Cloud URL
      api_key: ${WEAVIATE_API_KEY}           # Your Weaviate Cloud API key
      openai_api_key: ${OPENAI_API_KEY}      # OpenAI API key for embeddings
      collections:
        - name: ${WEAVIATE_COLLECTION:-WeaveDocs}
          type: text
          description: Main text documents collection
        - name: ${WEAVIATE_COLLECTION_IMAGES:-WeaveImages}
          type: image
          description: Image documents collection
        - name: ${WEAVIATE_COLLECTION_TEST:-WeaveDocs_test}
          type: text
          description: Test text documents collection

    # Weaviate Local (Open Source)
    # Requires: Local Weaviate instance running on localhost:8080
    - name: weaviate-local
      type: weaviate-local
      url: http://localhost:8080              # Local Weaviate instance
      collections:
        - name: ${WEAVIATE_COLLECTION:-WeaveDocs}
          type: text
          description: Main text documents collection
        - name: ${WEAVIATE_COLLECTION_IMAGES:-WeaveImages}
          type: image
          description: Image documents collection

    # Mock Database (For Testing)
    # No external dependencies required
    - name: mock
      type: mock
      enabled: true
      simulate_embeddings: true              # Simulate embedding generation
      embedding_dimension: 384               # Embedding vector dimension
      collections:
        - name: WeaveDocs
          type: text
          description: Mock text documents collection
        - name: WeaveImages
          type: image
          description: Mock image documents collection

  # Collection Schemas (inline)
  # Define named schemas inline that can be used to create collections
  # Use: weave collection create MyCollection --schema RagMeDocs
  # Note: Inline schemas take precedence over schemas in schemas_dir
  schemas:
    # Text document schema optimized for RAG (Retrieval-Augmented Generation)
    - name: RagMeDocs
      schema:
        class: RagMeDocs
        vectorizer: text2vec-weaviate
        properties:
          - name: url
            datatype:
              - text
            description: the source URL of the webpage
          - name: text
            datatype:
              - text
            description: the content of the webpage
          - name: metadata
            datatype:
              - text
            description: additional metadata in JSON format
      metadata:
        id:
          type: string
        metadata:
          type: string
        text:
          type: string
        url:
          type: string

    # Image document schema optimized for RAG
    - name: RagMeImages
      schema:
        class: RagMeImages
        vectorizer: text2vec-weaviate
        properties:
          - name: url
            datatype:
              - text
            description: the source URL or filename of the image
          - name: image
            datatype:
              - text
            description: the image reference (truncated base64 or URL)
          - name: metadata
            datatype:
              - text
            description: additional metadata in JSON format
          - name: image_data
            datatype:
              - text
            description: full image data or reference
      metadata:
        id:
          type: string
        image:
          type: string
        image_data:
          type: string
        metadata:
          type: string
        url:
          type: string

# Environment Variables Reference:
# VECTOR_DB_TYPE: Database type to use (weaviate-cloud, weaviate-local, mock)
# WEAVIATE_URL: Your Weaviate Cloud URL
# WEAVIATE_API_KEY: Your Weaviate Cloud API key
# OPENAI_API_KEY: OpenAI API key for embeddings (required for weaviate-cloud)
# WEAVIATE_COLLECTION: Main text collection name
# WEAVIATE_COLLECTION_IMAGES: Image collection name
# WEAVIATE_COLLECTION_TEST: Test collection name